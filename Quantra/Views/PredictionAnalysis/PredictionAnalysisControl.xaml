<UserControl x:Class="Quantra.Controls.PredictionAnalysisControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Quantra.Controls"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:converters="clr-namespace:Quantra.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="#1E1E30"
             HorizontalAlignment="Stretch" 
             VerticalAlignment="Stretch"
             Width="Auto" Height="Auto"
             MinWidth="400" MinHeight="300">

    <!-- Add reference to the converter in resources section -->
    <UserControl.Resources>
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
        <converters:NullToCollapsedConverter x:Key="NullToCollapsedConverter"/>
        <converters:GreaterThanConverter x:Key="GreaterThanConverter"/>
        <converters:LessThanConverter x:Key="LessThanConverter"/>
        <!-- Add duration resources for consistent animations -->
        <Duration x:Key="StandardAnimationDuration">0:0:0.3</Duration>
    </UserControl.Resources>

    <!-- Main grid needs explicit sizing to ensure proper rendering -->
    <Grid Margin="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Title and Controls -->
            <RowDefinition Height="Auto"/>
            <!-- Analysis Parameters -->
            <RowDefinition Height="*"/>
            <!-- Top Predictions Grid (fills available space) -->
            <RowDefinition Height="*"/>
            <!-- Results and Charts (fills available space) -->
            <RowDefinition Height="Auto"/>
            <!-- Status Bar -->
        </Grid.RowDefinitions>

        <!-- Title and Controls - Add Auto Mode Toggle -->
        <Grid Grid.Row="0" Margin="0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="Prediction Analysis" FontSize="22" 
                       FontWeight="Bold" Foreground="White" Margin="5,0,0,10"/>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">

                <!-- Selected Trading Strategy -->
                <Border Background="#3E3E56" BorderThickness="1" Margin="0,0,10,0" 
        CornerRadius="3" Padding="8,4" Width="231">
                    <ComboBox x:Name="TradingStrategy" Height="20" ToolTip="Select this prediction control's trading strategy"
                              SelectionChanged="TradingStrategy_SelectionChanged" Margin="21,0,22,0">
                        <ComboBoxItem Content="SMA Crossover" Tag="SMA"/>
                        <ComboBoxItem Content="RSI Divergence" Tag="RSI"/>
                        <ComboBoxItem Content="Bollinger Bands" Tag="BB"/>
                        <ComboBoxItem Content="MACD Crossover" Tag="MACD" IsSelected="True"/>
                    </ComboBox>
                </Border>

                <!-- Update Rate -->
                <Border Background="#3E3E56" BorderThickness="1" Margin="0,0,10,0" 
        CornerRadius="3" Padding="8,4" Width="133">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Update Rate" Foreground="White" VerticalAlignment="Center" Margin="0,0,8,0"/>
                        <ComboBox x:Name="AutoModeToggle2" Width="60" Height="20"
                                  ToolTip="Enable/Disable Data updates every 15 minutes during trading hours, or if data is > 15m old.">
                            <ComboBoxItem Content="15m" Tag="15m" IsSelected="True"/>
                            <ComboBoxItem Content="30m" Tag="30m"/>
                            <ComboBoxItem Content="1h" Tag="1h"/>
                            <ComboBoxItem Content="2h" Tag="2h"/>
                            <ComboBoxItem Content="3h" Tag="3h"/>
                        </ComboBox>
                    </StackPanel>
                </Border>

                <!-- Auto Mode Toggle -->
                <Border Background="#3E3E56" BorderThickness="1" Margin="0,0,10,0" 
                        CornerRadius="3" Padding="8,4">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Auto Mode" Foreground="White" VerticalAlignment="Center" Margin="0,0,8,0"/>
                        <ToggleButton x:Name="AutoModeToggle" Width="40" Height="20"
                                      IsChecked="{Binding IsAutomatedMode, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PredictionAnalysisControl}}}"
                                      ToolTip="Enable/Disable automated analysis at regular intervals">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="ToggleBorder" Background="#333344" CornerRadius="10" 
                                                        BorderThickness="1" BorderBrush="#666677">
                                                    <Grid>
                                                        <Ellipse x:Name="SwitchKnob" Width="16" Height="16" 
                                                                 HorizontalAlignment="Left" Margin="2,0,0,0"
                                                                 Fill="#CCCCCC"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ToggleBorder" Property="Background" Value="#006666"/>
                                                        <Setter TargetName="SwitchKnob" Property="Fill" Value="Cyan"/>
                                                        <Setter TargetName="SwitchKnob" Property="HorizontalAlignment" Value="Right"/>
                                                        <Setter TargetName="SwitchKnob" Property="Margin" Value="0,0,2,0"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </StackPanel>
                </Border>

                <Button x:Name="RefreshButton" Content="↻" Width="40" Height="30" 
                        Click="RefreshButton_Click"
                        Background="#3E3E56" Foreground="White" 
                        BorderBrush="Cyan" Margin="0,0,5,0"/>
            </StackPanel>
        </Grid>

        <!-- Analysis Parameters - no changes -->
        <Grid Grid.Row="1" Margin="0,5" Background="#2D2D42">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Symbol Selection -->
            <StackPanel Grid.Row="0" Grid.Column="0" Margin="10,5">
                <TextBlock Text="Symbol List:" Foreground="White" Margin="0,5"/>
                <ComboBox x:Name="SymbolFilterComboBox" Margin="0,0,5,0"
                          Background="#2D2D42" Foreground="Black" BorderBrush="#3E3E56"
                          SelectionChanged="SymbolFilterComboBox_SelectionChanged">
                    <ComboBoxItem Content="All Symbols"/>
                    <ComboBoxItem Content="Top Market Cap" IsSelected="True"/>
                    <ComboBoxItem Content="Tech Sector"/>
                    <ComboBoxItem Content="Financial Sector"/>
                    <ComboBoxItem Content="Healthcare Sector"/>
                    <ComboBoxItem Content="Watchlist"/>
                    <ComboBoxItem Content="Custom"/>
                </ComboBox>
            </StackPanel>

            <!-- Timeframe Selection -->
            <StackPanel Grid.Row="0" Grid.Column="1" Margin="10,5">
                <TextBlock Text="Timeframe:" Foreground="White" Margin="0,5"/>
                <ComboBox x:Name="TimeframeComboBox" Margin="0,0,5,0"
                          Background="#2D2D42" Foreground="Black" BorderBrush="#3E3E56">
                    <ComboBoxItem Content="1 Day" Tag="1day"/>
                    <ComboBoxItem Content="1 Week" Tag="1week"/>
                    <ComboBoxItem Content="1 Month" Tag="1month" IsSelected="True"/>
                    <ComboBoxItem Content="3 Months" Tag="3month"/>
                    <ComboBoxItem Content="1 Year" Tag="1year"/>
                </ComboBox>
            </StackPanel>

            <!-- Analyze Button -->
            <Button Grid.Row="0" Grid.Column="2" x:Name="AnalyzeButton" Content="Analyze" 
                    Width="100" Height="30" Margin="10,25,10,0" 
                    Click="AnalyzeButton_Click"
                    Background="#3E3E56" Foreground="White" BorderBrush="Cyan"/>

            <!-- Indicators Selection - Update with all available indicators -->
            <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                      Orientation="Horizontal" Margin="10,10,10,10">
                <TextBlock Text="Indicators:" Foreground="White" Margin="0,0,10,0" VerticalAlignment="Center"/>
                <WrapPanel>
                    <CheckBox x:Name="VwapCheckBox" Content="VWAP" Foreground="White" Margin="5,0" IsChecked="True"/>
                    <CheckBox x:Name="MacdCheckBox" Content="MACD" Foreground="White" Margin="5,0" IsChecked="True"/>
                    <CheckBox x:Name="RsiCheckBox" Content="RSI" Foreground="White" Margin="5,0" IsChecked="True"/>
                    <CheckBox x:Name="BollingerCheckBox" Content="Bollinger" Foreground="White" Margin="5,0" IsChecked="True"/>
                    <CheckBox x:Name="MaCheckBox" Content="Moving Avg" Foreground="White" Margin="5,0" IsChecked="True"/>
                    <CheckBox x:Name="VolumeCheckBox" Content="Volume" Foreground="White" Margin="5,0" IsChecked="True"/>
                    <CheckBox x:Name="BreadthThrustCheckBox" Content="Breadth Thrust" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="AdxCheckBox" Content="ADX" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="RocCheckBox" Content="ROC" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="UoCheckBox" Content="Ult. Osc" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="BbpCheckBox" Content="Bull/Bear" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="CciCheckBox" Content="CCI" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="AtrCheckBox" Content="ATR" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="WilliamsRCheckBox" Content="Williams %R" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="StochCheckBox" Content="Stochastic" Foreground="White" Margin="5,0" IsChecked="False"/>
                    <CheckBox x:Name="StochRsiCheckBox" Content="Stoch RSI" Foreground="White" Margin="5,0" IsChecked="False"/>
                </WrapPanel>
            </StackPanel>

            <!-- Minimum Confidence -->
            <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" Margin="10,10,10,10">
                <TextBlock Text="Min Confidence:" Foreground="White" Margin="0,0,5,0" VerticalAlignment="Center"/>
                <ComboBox x:Name="ConfidenceComboBox" Width="60"
                          Background="#2D2D42" Foreground="Black" BorderBrush="#3E3E56">
                    <ComboBoxItem Content="50%" Tag="0.5"/>
                    <ComboBoxItem Content="60%" Tag="0.6" IsSelected="True"/>
                    <ComboBoxItem Content="70%" Tag="0.7"/>
                    <ComboBoxItem Content="80%" Tag="0.8"/>
                    <ComboBoxItem Content="90%" Tag="0.9"/>
                </ComboBox>
            </StackPanel>
        </Grid>

        <!-- Top Predictions Grid - Moved out of TabControl to its own row -->
        <Grid Grid.Row="2" Margin="0,10,0,10" Background="#2D2D42" 
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header for the Top Predictions section -->
            <TextBlock Grid.Row="0" Text="Top Predictions" FontSize="16" 
                      FontWeight="SemiBold" Foreground="White" Margin="10,5"/>

            <!-- Prediction List - Updated with responsive design -->
            <DataGrid x:Name="PredictionDataGrid" Grid.Row="1" Margin="5,5,5,5" 
                      AutoGenerateColumns="False" 
                      Background="#2D2D42" Foreground="Black" 
                      BorderBrush="#3E3E56" AlternatingRowBackground="#3E3E56"
                      SelectionChanged="PredictionDataGrid_SelectionChanged"
                      CanUserAddRows="False" CanUserDeleteRows="False"
                      IsReadOnly="True"
                      CanUserResizeColumns="True"
                      ColumnWidth="*"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ColumnHeaderStyle="{StaticResource EnhancedDataGridColumnHeaderStyle}"
                      EnableRowVirtualization="True"
                      EnableColumnVirtualization="True"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      VirtualizingStackPanel.ScrollUnit="Pixel">
                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding PredictedAction}" Value="BUY">
                                <Setter Property="Background" Value="#304838"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PredictedAction}" Value="SELL">
                                <Setter Property="Background" Value="#4A3030"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </DataGrid.ItemsPanel>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="80">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="GhostWhite"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Action" Binding="{Binding PredictedAction}" Width="80">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="GhostWhite"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTemplateColumn Header="Confidence" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ProgressBar Value="{Binding Confidence}" 
                                               Minimum="0" Maximum="1" 
                                               Height="15"
                                               HorizontalAlignment="Stretch">
                                        <ProgressBar.Style>
                                            <Style TargetType="ProgressBar">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PredictedAction}" Value="BUY">
                                                        <Setter Property="Foreground" Value="#20C040"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PredictedAction}" Value="SELL">
                                                        <Setter Property="Foreground" Value="#C02020"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ProgressBar.Style>
                                    </ProgressBar>
                                    <TextBlock Text="{Binding Confidence, StringFormat={}{0:P0}}" 
                                             HorizontalAlignment="Center" 
                                             VerticalAlignment="Center"
                                             FontSize="10"
                                             FontWeight="Bold"
                                             Foreground="White"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Current" Binding="{Binding CurrentPrice, StringFormat=\${0:F2}}" 
                                      Width="90">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="GhostWhite"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Target" Binding="{Binding TargetPrice, StringFormat=\${0:F2}}" 
                                      Width="90">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="GhostWhite"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Potential" Binding="{Binding PotentialReturn, StringFormat={}{0:P2}}" 
                                      Width="90">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PredictedAction}" Value="BUY">
                                        <Setter Property="Foreground" Value="#20C040"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PredictedAction}" Value="SELL">
                                        <Setter Property="Foreground" Value="#C02020"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- New column to show trending indicators -->
                    <DataGridTemplateColumn Header="Signals" Width="110">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <!-- RSI Signal -->
                                    <Border Width="22" Height="22" Margin="2" CornerRadius="3" 
                                            Visibility="{Binding Indicators[RSI], Converter={StaticResource NullToCollapsedConverter}}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Indicators[RSI], Converter={StaticResource LessThanConverter}, ConverterParameter=30}" Value="True">
                                                        <Setter Property="Background" Value="#20C040"/>
                                                        <Setter Property="ToolTip" Value="{Binding Indicators[RSI], StringFormat=RSI: {0:F1} - Oversold}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Indicators[RSI], Converter={StaticResource GreaterThanConverter}, ConverterParameter=70}" Value="True">
                                                        <Setter Property="Background" Value="#C02020"/>
                                                        <Setter Property="ToolTip" Value="{Binding Indicators[RSI], StringFormat=RSI: {0:F1} - Overbought}"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Indicators[RSI], Converter={StaticResource GreaterThanConverter}, ConverterParameter=30}" Value="True"/>
                                                            <Condition Binding="{Binding Indicators[RSI], Converter={StaticResource LessThanConverter}, ConverterParameter=70}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="#3E3E56"/>
                                                        <Setter Property="ToolTip" Value="{Binding Indicators[RSI], StringFormat=RSI: {0:F1} - Neutral}"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock Text="RSI" Foreground="White" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <!-- MACD Signal -->
                                    <Border Width="22" Height="22" Margin="2" CornerRadius="3" 
                                            Visibility="{Binding Indicators[MACDHistogram], Converter={StaticResource NullToCollapsedConverter}}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Indicators[MACDHistogram], Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                                        <Setter Property="Background" Value="#20C040"/>
                                                        <Setter Property="ToolTip" Value="{Binding Indicators[MACDHistogram], StringFormat=MACD: {0:F3} - Bullish}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Indicators[MACDHistogram], Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                                        <Setter Property="Background" Value="#C02020"/>
                                                        <Setter Property="ToolTip" Value="{Binding Indicators[MACDHistogram], StringFormat=MACD: {0:F3} - Bearish}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock Text="MAC" Foreground="White" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <!-- ADX Signal -->
                                    <Border Width="22" Height="22" Margin="2" CornerRadius="3" 
                                            Visibility="{Binding Indicators[ADX], Converter={StaticResource NullToCollapsedConverter}}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Indicators[ADX], Converter={StaticResource GreaterThanConverter}, ConverterParameter=25}" Value="True">
                                                        <Setter Property="Background" Value="#3E90FF"/>
                                                        <Setter Property="ToolTip" Value="{Binding Indicators[ADX], StringFormat=ADX: {0:F1} - Strong Trend}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Indicators[ADX], Converter={StaticResource LessThanConverter}, ConverterParameter=25}" Value="True">
                                                        <Setter Property="Background" Value="#3E3E56"/>
                                                        <Setter Property="ToolTip" Value="{Binding Indicators[ADX], StringFormat=ADX: {0:F1} - Weak Trend}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock Text="ADX" Foreground="White" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <!-- Volume Signal -->
                                    <Border Width="22" Height="22" Margin="2" CornerRadius="3" 
                                            Visibility="{Binding Indicators[Volume], Converter={StaticResource NullToCollapsedConverter}}">
                                        <Border.Background>
                                            <SolidColorBrush Color="#3E3E56"/>
                                        </Border.Background>
                                        <Border.ToolTip>
                                            <MultiBinding StringFormat="Volume: {0:N0}">
                                                <Binding Path="Indicators[Volume]"/>
                                            </MultiBinding>
                                        </Border.ToolTip>
                                        <TextBlock Text="VOL" Foreground="White" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </WrapPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Update event bindings for all three buttons -->
                    <DataGridTemplateColumn Header="Trading Rule" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Background="Transparent" BorderThickness="0" Click="TradingRule_Click">
                                    <TextBlock Text="{Binding TradingRule}" 
                                               Foreground="#3E90FF" 
                                               TextAlignment="Center"
                                               Padding="5,2">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TradingRule}" Value="">
                                                        <Setter Property="Text" Value="Set Rule"/>
                                                        <Setter Property="Foreground" Value="#999999"/>
                                                        <Setter Property="FontStyle" Value="Italic"/>
                                                        <Setter Property="TextDecorations" Value="Underline"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Actions" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <Button Content="Create Rule" 
                                            Click="CreateRule_Click"
                                            Background="#3E3E56" 
                                            Foreground="White" 
                                            BorderBrush="Cyan" 
                                            Width="70" Height="22" 
                                            Margin="2"/>
                                    <Button Content="Execute Trade"
                                            Click="ExecuteTradeButton_Click" 
                                            Background="#2D6A4C" 
                                            Foreground="#50E070"
                                            BorderBrush="Cyan" 
                                            Width="70" Height="22"
                                            Margin="2,2,2,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!-- Results and Charts - Add TabControl with Sentiment Tab -->
        <TabControl Grid.Row="3" Margin="0,10,0,10" Background="#2D2D42" 
                      BorderBrush="#3E3E56" BorderThickness="1">
            <TabItem Header="Prediction Details" Name="PredictionTabItem" FontWeight="SemiBold" Foreground="Black"
                     Style="{StaticResource TabItemStyle}">
                <Grid x:Name="chartContainer" MinHeight="200"/>
            </TabItem>

            <TabItem Header="Sentiment Analysis" Name="SentimentTabItem" FontWeight="SemiBold" Foreground="Black" 
                     Visibility="Collapsed"
                     Style="{StaticResource TabItemStyle}">
                <StackPanel x:Name="sentimentVisualizationContainer" Margin="0" />
            </TabItem>
            
            <TabItem Header="Technical Indicators" Name="IndicatorsTabItem" FontWeight="SemiBold" Foreground="Black"
                     Style="{StaticResource TabItemStyle}">
                <Grid x:Name="indicatorContainer" MinHeight="200"/>
            </TabItem>
        </TabControl>

        <!-- Status Bar - no changes -->
        <Grid Grid.Row="4" Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" x:Name="StatusText" 
                       Text="Ready" Foreground="White" Margin="5,0"/>

            <TextBlock Grid.Column="1" x:Name="LastUpdatedText" 
                       Text="Last updated: Never" Foreground="White" Margin="0,0,5,0"/>
        </Grid>
    </Grid>
</UserControl>
