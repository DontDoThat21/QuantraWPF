<!-- CustomTitleBar.xaml update -->
<UserControl x:Class="Quantra.SharedTitleBar"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            Height="47"
            Background="Transparent"
            ClipToBounds="True">
    <!-- Resources must be before any content -->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Quantra;component/Styles/EnhancedStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Inherit from EnhancedButtonStyle for title bar buttons -->
            <Style x:Key="TitleBarButtonStyle" TargetType="Button" BasedOn="{StaticResource EnhancedButtonStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- Move triggers inside the Style, after setters -->
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#44FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <!-- Make Border the root element for proper corner radius -->
    <Border CornerRadius="10,10,0,0" Background="{StaticResource DarkBlueBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Dispatcher Monitoring Row -->
            <Grid Grid.Row="0" Background="#1A000000" Margin="0,0,0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="10,2" VerticalAlignment="Center">
                    <TextBlock Text="Callee: " Foreground="#FFD700" FontSize="10" FontWeight="Bold"/>
                    <TextBlock Text="{Binding CurrentCallee}" Foreground="White" FontSize="10"/>
                </StackPanel>
                
                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="10,2" VerticalAlignment="Center">
                    <TextBlock Text="Current Call: " Foreground="#FFD700" FontSize="10" FontWeight="Bold"/>
                    <TextBlock Text="{Binding CurrentCall}" Foreground="White" FontSize="10"/>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Name="FormTitle" Text="{Binding Title, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                        Foreground="White" Margin="10,0,0,0" VerticalAlignment="Center"/>

                <Rectangle Grid.Column="1" x:Name="TitleBarRectangle" Fill="Transparent" 
                        MouseDown="TitleBar_MouseDown" 
                        MouseUp="TitleBar_MouseUp" 
                        MouseMove="TitleBar_MouseMove" />
                        
                <!-- Emergency Stop Button -->
                <Button x:Name="EmergencyStopButton" Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0"
                        Click="EmergencyStopButton_Click"
                        Width="160" Height="24" VerticalAlignment="Center">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
                            <Setter Property="Background" Value="#8B0000"/>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="#FF0000"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}" 
                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="3">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#BD0000"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding IsEmergencyStopActive}" Value="True">
                                    <Setter Property="Background" Value="#228B22"/>
                                    <Setter Property="BorderBrush" Value="#32CD32"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal">
                        <Path Width="14" Height="14" Margin="0,0,6,0" Fill="White" Stretch="Uniform"
                              Data="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M12 20C7.59 20 4 16.41 4 12S7.59 4 12 4 20 7.59 20 12 16.41 20 12 20M13 13H11V7H13V13M13 17H11V15H13V17Z" />
                        <TextBlock x:Name="EmergencyStopText" Text="EMERGENCY STOP" />
                    </StackPanel>
                </Button>

                <!-- Loading Icon and API Usage Display Container -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!-- VIX Display -->
                    <TextBlock x:Name="VixDisplayTextBlock"
                               Text="{Binding VixDisplay, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               Foreground="Cyan"
                               FontWeight="Bold"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Margin="0,0,15,0"
                               ToolTip="VIX Volatility Index - Updates every minute during trading hours" />
                    
                    <!-- Global Loading Status Indicator -->
                    <Grid Width="16" Height="16" Margin="0,0,8,0">
                        <!-- Background element that shows royal blue when idle -->
                        <Rectangle x:Name="IdleBackground"
                                   Fill="{StaticResource IdleBackgroundRoyalBlueBrush}"
                                   Visibility="{Binding IsGlobalLoading, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                   ToolTip="App is idle"/>
                        
                        <!-- Loading progress bar with purple background -->
                        <ProgressBar x:Name="GlobalLoadingIcon"
                                     Width="16" Height="16"
                                     IsIndeterminate="True"
                                     Visibility="{Binding IsGlobalLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     ToolTip="App is busy with calculations or API calls">
                            <ProgressBar.Style>
                                <Style TargetType="ProgressBar">
                                    <Setter Property="Background" Value="{StaticResource LoadingBackgroundPurpleBrush}"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="#4CAF50"/>
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </Grid>
                    
                    <!-- API Usage Display -->
                    <TextBlock x:Name="ApiUsageTextBlock"
                               Text="{Binding ApiUsageDisplay, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               Foreground="Orange"
                               FontWeight="Bold"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               ToolTip="Alpha Vantage Free Tier: 25 requests per minute. Usage is tracked and shown here." />
                </StackPanel>

                <ContentControl Grid.Column="3" x:Name="SettingsPlaceholder" />

                <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="MinimizeButton" Style="{StaticResource TitleBarButtonStyle}" Click="MinimizeButton_Click">
                        <Path Data="M0,0 L10,0" Stroke="White" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                    <Button x:Name="FullscreenButton" Style="{StaticResource TitleBarButtonStyle}" Click="FullscreenButton_Click" ToolTip="Toggle Fullscreen">
                        <Path Data="M1,1 L4,1 L4,4 M6,1 L9,1 L9,4 M1,6 L4,6 L4,9 M6,6 L9,6 L9,9" Stroke="White" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                    <Button x:Name="MaximizeButton" Style="{StaticResource TitleBarButtonStyle}" Click="MaximizeButton_Click">
                        <Path Data="M0,0 L10,0 L10,10 L0,10 Z" Stroke="White" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                    <Button x:Name="CloseButton" Style="{StaticResource TitleBarButtonStyle}" Click="CloseButton_Click">
                        <Path Data="M0,0 L10,10 M0,10 L10,0" Stroke="White" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</UserControl>